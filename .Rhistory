install.packages("C:/Users/tpott/Downloads/FaultTree_0.2.8.zip", repos = NULL, type = "win.binary")
library(FaultTree)
tree1[,1:8]
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2html(tree1, write_file=TRUE)
browseURL("tree1.html")
browseURL("tree1.html")
browseURL("pwr.html")
pwr<-ftree.make(type="or", name="insufficient", name2="Electrical Power")
pwr<-ftree.make(type="or", name="insufficient", name2="Electrical Power")
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G1, G2, G3")
pwr<-addLogic(pwr, at=2, type="or", name="No Power", name2="From G1")
pwr<-addLogic(pwr, at=3, type="or", name="No Output", name2="From G1")
pwr<-addProbability(pwr, at=3, prob=1e-4, tag="G1A", name="G1 Conn Open")
pwr<-addProbability(pwr, at=4, prob=1e-3, tag="G1", name="Generator G1", name2="Fails")
pwr<-addLogic(pwr, at=4, type="or", name="No Input", name2="To G1")
pwr<-addProbability(pwr, at=7, prob=1e-3, tag="E1", name="Engine E1", name2="Fails")
pwr<-addProbability(pwr, at=7, prob=1e-4, tag="G1B", name="Bleed Air To", name2="G1 Fails")
pwr<-addLogic(pwr, at=2, type="or", name="No Power", name2="From G2")
pwr<-addProbability(pwr, at=10, prob=1e-4, tag="G2A", name="G2 Conn Open")
pwr<-addLogic(pwr, at=10, type="or", name="No Output", name2="From G2")
pwr<-addLogic(pwr, at=12, type="or", name="No Input", name2="To G2")
pwr<-addDuplicate( pwr, at=13, dup_id=8)
pwr<-addProbability(pwr, at=13, prob=1e-4, tag="G2B", name="Bleed Air To", name2="G2 Fails")
pwr<-addProbability(pwr, at=12, prob=1e-3, tag="G2", name="Generator G2", name2="Fails")
pwr<-addLogic(pwr, at=12, type="or", name="Switch To", name2="G2 Fails")
pwr<-addProbability(pwr, at=17, prob=1e-4, tag="M1", name="Monitor M1", name2="Fails")
pwr<-addProbability(pwr, at=17, prob=1e-4, tag="S1", name="Switching S1", name2="Fails")
pwr<-addLogic(pwr, at=2, type="or", name="No Power", name2="From G3")
pwr<-addLogic(pwr, at=20, type="or", name="No Output", name2="From G3")
pwr<-addProbability(pwr, at=20, prob=1e-4, tag="G3A", name="G3 Conn Open")
pwr<-addProbability(pwr, at=21, prob=1e-3, tag="G3", name="Generator G3", name2="Fails")
pwr<-addLogic(pwr, at=21, type="or", name="No Input", name2="To G3")
pwr<-addProbability(pwr, at=24, prob=1e-3, tag="E2", name="Engine E2", name2="Fails")
pwr<-addProbability(pwr, at=24, prob=1e-4, tag="G3B", name="Bleed Air To", name2="G2 Fails")
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G1, G2, G4")
pwr<-addDuplicate( pwr, at=27, dup_id=3)
pwr<-addDuplicate( pwr, at=27, dup_id=10)
pwr<-addLogic(pwr, at=27, type="or", name="No Power", name2="From G4")
pwr<-addProbability(pwr, at=45, prob=1e-4, tag="G4A", name="G4 Conn Open")
pwr<-addLogic(pwr, at=45, type="or", name="No Output", name2="From G4")
pwr<-addDuplicate( pwr, at=48, dup_id=25)
pwr<-addLogic(pwr, at=47, type="or", name="No Input", name2="To G4")
pwr<-addProbability(pwr, at=48, prob=1e-3, tag="G4", name="Generator G4", name2="Fails")
pwr<-addProbability(pwr, at=47, prob=1e-4, tag="G4B", name="Bleed Air To", name2="G4 Fails")
pwr<-addLogic(pwr, at=47, type="or", name="Switch To", name2="G4 Fails")
pwr<-addDuplicate( pwr, at=52, dup_id=18)
pwr<-addDuplicate( pwr, at=52, dup_id=19)
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G1, G3, G4")
pwr<-addDuplicate( pwr, at=55, dup_id=3)
pwr<-addDuplicate( pwr, at=55, dup_id=20)
pwr<-addDuplicate( pwr, at=55, dup_id=45)
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G2, G3, G4")
pwr<-addDuplicate( pwr, at=80, dup_id=10)
pwr<-addDuplicate( pwr, at=80, dup_id=20)
pwr<-addDuplicate( pwr, at=80, dup_id=45)
ftree2html(pwr, write_file=TRUE)
browseURL("pwr.html")
Fault_Tree.r
pwr<-ftree.make(type="or", name="insufficient", name2="Electrical Power")
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G1, G2, G3")
pwr<-addLogic(pwr, at=2, type="or", name="No Power", name2="From G1")
pwr<-addLogic(pwr, at=3, type="or", name="No Output", name2="From G1")
pwr<-addProbability(pwr, at=3, prob=1e-4, tag="G1A", name="G1 Conn Open")
pwr<-addProbability(pwr, at=4, prob=1e-3, tag="G1", name="Generator G1", name2="Fails")
pwr<-addLogic(pwr, at=4, type="or", name="No Input", name2="To G1")
pwr<-addProbability(pwr, at=7, prob=1e-3, tag="E1", name="Engine E1", name2="Fails")
pwr<-addProbability(pwr, at=7, prob=1e-4, tag="G1B", name="Bleed Air To", name2="G1 Fails")
pwr<-addLogic(pwr, at=2, type="or", name="No Power", name2="From G2")
pwr<-addProbability(pwr, at=10, prob=1e-4, tag="G2A", name="G2 Conn Open")
pwr<-addLogic(pwr, at=10, type="or", name="No Output", name2="From G2")
pwr<-addLogic(pwr, at=12, type="or", name="No Input", name2="To G2")
pwr<-addDuplicate( pwr, at=13, dup_id=8)
pwr<-addProbability(pwr, at=13, prob=1e-4, tag="G2B", name="Bleed Air To", name2="G2 Fails")
pwr<-addProbability(pwr, at=12, prob=1e-3, tag="G2", name="Generator G2", name2="Fails")
pwr<-addLogic(pwr, at=12, type="or", name="Switch To", name2="G2 Fails")
pwr<-addProbability(pwr, at=17, prob=1e-4, tag="M1", name="Monitor M1", name2="Fails")
pwr<-addProbability(pwr, at=17, prob=1e-4, tag="S1", name="Switching S1", name2="Fails")
pwr<-addLogic(pwr, at=2, type="or", name="No Power", name2="From G3")
pwr<-addLogic(pwr, at=20, type="or", name="No Output", name2="From G3")
pwr<-addProbability(pwr, at=20, prob=1e-4, tag="G3A", name="G3 Conn Open")
pwr<-addProbability(pwr, at=21, prob=1e-3, tag="G3", name="Generator G3", name2="Fails")
pwr<-addLogic(pwr, at=21, type="or", name="No Input", name2="To G3")
pwr<-addProbability(pwr, at=24, prob=1e-3, tag="E2", name="Engine E2", name2="Fails")
pwr<-addProbability(pwr, at=24, prob=1e-4, tag="G3B", name="Bleed Air To", name2="G2 Fails")
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G1, G2, G4")
pwr<-addDuplicate( pwr, at=27, dup_id=3)
pwr<-addDuplicate( pwr, at=27, dup_id=10)
pwr<-addLogic(pwr, at=27, type="or", name="No Power", name2="From G4")
pwr<-addProbability(pwr, at=45, prob=1e-4, tag="G4A", name="G4 Conn Open")
pwr<-addLogic(pwr, at=45, type="or", name="No Output", name2="From G4")
pwr<-addLogic(pwr, at=47, type="or", name="No Input", name2="To G4")
pwr<-addDuplicate( pwr, at=48, dup_id=25)
pwr<-addProbability(pwr, at=48, prob=1e-3, tag="G4", name="Generator G4", name2="Fails")
pwr<-addProbability(pwr, at=47, prob=1e-4, tag="G4B", name="Bleed Air To", name2="G4 Fails")
pwr<-addLogic(pwr, at=47, type="or", name="Switch To", name2="G4 Fails")
pwr<-addDuplicate( pwr, at=52, dup_id=18)
pwr<-addDuplicate( pwr, at=52, dup_id=19)
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G1, G3, G4")
pwr<-addDuplicate( pwr, at=55, dup_id=3)
pwr<-addDuplicate( pwr, at=55, dup_id=20)
pwr<-addDuplicate( pwr, at=55, dup_id=45)
pwr<-addLogic(pwr, at=1, type="and", name="No Output", name2="G2, G3, G4")
pwr<-addDuplicate( pwr, at=80, dup_id=10)
pwr<-addDuplicate( pwr, at=80, dup_id=20)
pwr<-addDuplicate( pwr, at=80, dup_id=45)
ftree2html(pwr, write_file=TRUE)
browseURL("pwr.html")
install.packages("C:/Users/tpott/Downloads/FaultTree.widget_0.2.8.zip", repos = NULL, type = "win.binary")
library("FaultTree.widget", lib.loc="~/R/win-library/3.4")
library("FaultTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/jsonlite_1.5.zip", repos = NULL, type = "win.binary")
library("jsonlite", lib.loc="~/R/win-library/3.4")
library("FaultTree", lib.loc="~/R/win-library/3.4")
library("FaultTree.widget", lib.loc="~/R/win-library/3.4")
tree1[,1:8]
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2html(tree1, write_file=TRUE)
browseURL("tree1.html")
help("ftree2widget")
clear
clc
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2widget(tree1)
install.packages("C:/Users/tpott/Downloads/htmlwidgets_0.9.zip", repos = NULL, type = "win.binary")
library("htmlwidgets", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/htmltools_0.3.6.zip", repos = NULL, type = "win.binary")
library("htmltools", lib.loc="~/R/win-library/3.4")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library("htmltools", lib.loc="~/R/win-library/3.4")
library("htmlwidgets", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/digest_0.6.14.zip", repos = NULL, type = "win.binary")
library("digest", lib.loc="~/R/win-library/3.4")
library("htmltools", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/Rcpp_0.12.14.zip", repos = NULL, type = "win.binary")
library("Rcpp", lib.loc="~/R/win-library/3.4")
library("htmlwidgets", lib.loc="~/R/win-library/3.4")
library("htmltools", lib.loc="~/R/win-library/3.4")
library("FaultTree.widget", lib.loc="~/R/win-library/3.4")
library("FaultTree", lib.loc="~/R/win-library/3.4")
library("digest", lib.loc="~/R/win-library/3.4")
library("jsonlite", lib.loc="~/R/win-library/3.4")
library("yaml", lib.loc="~/R/win-library/3.4")
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2widget(tree1)
install.packages("C:/Users/tpott/Downloads/shiny_1.0.5.zip", repos = NULL, type = "win.binary")
library("shiny", lib.loc="~/R/win-library/3.4")
install.packages(c("htmlwidgets", "Rcpp"))
library("shiny", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/R6_2.2.2.zip", repos = NULL, type = "win.binary")
library("shiny", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/httpuv_1.3.5.zip", repos = NULL, type = "win.binary")
library("shiny", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/xtable_1.8-2.zip", repos = NULL, type = "win.binary")
library("shiny", lib.loc="~/R/win-library/3.4")
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2widget(tree1)
library("backports", lib.loc="~/R/win-library/3.4")
library("base64enc", lib.loc="~/R/win-library/3.4")
library("bitops", lib.loc="~/R/win-library/3.4")
library("caTools", lib.loc="~/R/win-library/3.4")
library("digest", lib.loc="~/R/win-library/3.4")
library("evaluate", lib.loc="~/R/win-library/3.4")
library("FaultTree", lib.loc="~/R/win-library/3.4")
library("FaultTree.widget", lib.loc="~/R/win-library/3.4")
library("highr", lib.loc="~/R/win-library/3.4")
library("htmltools", lib.loc="~/R/win-library/3.4")
library("htmlwidgets", lib.loc="~/R/win-library/3.4")
library("httpuv", lib.loc="~/R/win-library/3.4")
library("jsonlite", lib.loc="~/R/win-library/3.4")
library("knitr", lib.loc="~/R/win-library/3.4")
library("magrittr", lib.loc="~/R/win-library/3.4")
library("yaml", lib.loc="~/R/win-library/3.4")
library("xtable", lib.loc="~/R/win-library/3.4")
library("stringi", lib.loc="~/R/win-library/3.4")
library("stringr", lib.loc="~/R/win-library/3.4")
library("rprojroot", lib.loc="~/R/win-library/3.4")
library("rmarkdown", lib.loc="~/R/win-library/3.4")
library("Rcpp", lib.loc="~/R/win-library/3.4")
library("R6", lib.loc="~/R/win-library/3.4")
library("mime", lib.loc="~/R/win-library/3.4")
library("markdown", lib.loc="~/R/win-library/3.4")
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2widget(tree1)
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, prob=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2widget(tree1)
tree1 <- ftree.make(type="priority",reversible_cond=TRUE, name="Site power loss")
tree1 <- addLogic(tree1, at=1, type="or", name="neither emergency", name2="generator operable")
tree1 <- addLogic(tree1, at=2, type="and", name="Independent failure", name2="of generators")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLatent(tree1, at=3, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addLogic(tree1, at=2, type="inhibit", name="Common cause", name2="failure of generators")
tree1 <- addProbability(tree1, at=6, prob=.05, name="Common cause", name2="beta factor")
tree1 <- addLatent(tree1, at=6, mttf=5,mttr=12/8760,inspect=1/26, name="e-gen set fails")
tree1 <- addDemand(tree1, at=1, mttf=1.0, name="External power", name2="interruption")
tree1 <- ftree.calc(tree1)
tree1[,1:8]
ftree2widget(tree1)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
source('C:/Users/tpott/Documents/Fault_Tree.r', echo=TRUE)
shiny::runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
install.packages("C:/Users/tpott/Downloads/collapsibleTree_0.1.6.zip", repos = NULL, type = "win.binary")
runApp('C:/Users/tpott/Documents/ShinyFTA')
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/data.tree_0.7.4.zip", repos = NULL, type = "win.binary")
library("data.tree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/DiagrammeR_0.9.2.zip", repos = NULL, type = "win.binary")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/RColorBrewer_1.1-2.zip", repos = NULL, type = "win.binary")
library("RColorBrewer", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/downloader_0.4.zip", repos = NULL, type = "win.binary")
library("downloader", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/dplyr_0.7.4.zip", repos = NULL, type = "win.binary")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/rlang_0.1.6.zip", repos = NULL, type = "win.binary")
library("rlang", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/assertthat_0.2.0.zip", repos = NULL, type = "win.binary")
library("assertthat", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
library("downloader", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/bindrcpp_0.2.zip", repos = NULL, type = "win.binary")
library("bindrcpp", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/bindr_0.1.zip", repos = NULL, type = "win.binary")
library("bindr", lib.loc="~/R/win-library/3.4")
library("bindrcpp", lib.loc="~/R/win-library/3.4")
library("data.tree", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("downloader", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/glue_1.2.0.zip", repos = NULL, type = "win.binary")
library("glue", lib.loc="~/R/win-library/3.4")
library("downloader", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/pkgconfig_2.0.1.zip", repos = NULL, type = "win.binary")
library("pkgconfig", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/tibble_1.4.1.zip", repos = NULL, type = "win.binary")
library("tibble", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/pillar_1.1.0.zip", repos = NULL, type = "win.binary")
library("pillar", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/crayon_1.3.4.zip", repos = NULL, type = "win.binary")
library("crayon", lib.loc="~/R/win-library/3.4")
library("data.tree", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
library("downloader", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("assertthat", lib.loc="~/R/win-library/3.4")
library("bindrcpp", lib.loc="~/R/win-library/3.4")
library("bindr", lib.loc="~/R/win-library/3.4")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
library("highr", lib.loc="~/R/win-library/3.4")
library("tibble", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/igraph_1.1.2.zip", repos = NULL, type = "win.binary")
library("igraph", lib.loc="~/R/win-library/3.4")
library("glue", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/influenceR_0.1.0.zip", repos = NULL, type = "win.binary")
library("influenceR", lib.loc="~/R/win-library/3.4")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/purrr_0.2.4.zip", repos = NULL, type = "win.binary")
library("purrr", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/readr_1.1.1.zip", repos = NULL, type = "win.binary")
library("readr", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/hms_0.4.0.zip", repos = NULL, type = "win.binary")
library("hms", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("downloader", lib.loc="~/R/win-library/3.4")
library("DiagrammeR", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/rgexf_0.15.3.zip", repos = NULL, type = "win.binary")
library("rgexf", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/XML_3.98-1.9.zip", repos = NULL, type = "win.binary")
library("XML", lib.loc="~/R/win-library/3.4")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/Rook_1.1-1.zip", repos = NULL, type = "win.binary")
library("Rook", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/brew_1.0-6.zip", repos = NULL, type = "win.binary")
library("brew", lib.loc="~/R/win-library/3.4")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/rstudioapi_0.7.zip", repos = NULL, type = "win.binary")
library("rstudioapi", lib.loc="~/R/win-library/3.4")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/scales_0.5.0.zip", repos = NULL, type = "win.binary")
library("scales", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/munsell_0.4.3.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/colorspace_1.3-2.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/plyr_1.8.4.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/tidyr_0.7.2.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/viridis_0.4.1.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/ggplot2_2.2.1.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/gtable_0.2.0.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/lazyeval_0.2.1.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/gridExtra_2.3.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/viridisLite_0.2.0.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/tpott/Downloads/visNetwork_2.0.3.zip", repos = NULL, type = "win.binary")
library("collapsibleTree", lib.loc="~/R/win-library/3.4")
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
runApp('C:/Users/tpott/Documents/ShinyFTA')
install.packages("devtools")
install.packages("devtools")
getwd()
devtools::create("ShinyFTWidget")
setwd("ShinyFTWidget")
htmlwidgets::scaffoldWidget("ShinyFTWidget")
devtools::install()
library(ShinyFTWidget)
ShinyFTWidget("Hello world")
ShinyFTWidget("Hello world")
setwd("C:\Users\tpott\Documents\ShinyFTWidg")
setwd("C:/Users/tpott/Documents/ShinyFTWidg")
devtools::install()
library(FaultTree.widget)
library(FaultTree.widget)
devtools::install()
library(FaultTree.widget)
remove.packages("FaultTree.widget", lib="~/R/win-library/3.4")
devtools::install()
getwd()
